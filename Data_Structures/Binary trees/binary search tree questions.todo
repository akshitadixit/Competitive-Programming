 ✔ *Search and Insert in BST @done (15-01-09 17:13)
 ✔ *Deletion from BST @done (15-01-09 17:13)
 ✔ *Minimum value in a Binary Search Tree @done (15-01-09 17:13)
 ✔ *Inorder predecessor and successor for a given key in BST @done (15-01-09 17:13)
 ✔ *Check if a binary tree is BST or not @done (15-01-09 17:13)
 ✔ *Lowest Common Ancestor in a Binary Search Tree @done (15-01-09 17:13)
 ✔ *Sorted order printing of a given array that represents a BST @done (15-01-09 17:13)
 ✔ *Inorder Successor in Binary Search Tree @done (15-01-09 17:13)
 ✔ *Find k-th smallest element in BST (Order Statistics in BST) @done (15-01-09 17:13)
 ✔ *Print BST keys in the given range @done (15-01-09 17:13)
 ✔ *Sorted Array to Balanced BST @done (15-01-09 17:13)
 ☐ Find the largest BST subtree in a given Binary Tree
 ☐ Check for Identical BSTs without building the trees
 ✔ Add all greater values to every node in a given BST @done (15-01-09 22:00)
 ☐ Remove BST keys outside the given range
 ☐ Check if each internal node of a BST has exactly one child
 ☐ Find if there is a triplet in a Balanced BST that adds to zero
 ☐ Merge two BSTs with limited extra space
 ☐ Two nodes of a BST are swapped
 ☐ correct the BST
 ☐ Construct BST from given preorder traversal | Set 1
 ☐ Construct BST from given preorder traversal | Set 2
 ✔ Floor and Ceil from a BST @done (15-01-09 21:54)
 ✔ Convert a BST to a Binary Tree such that sum of all greater keys is added to every key @done (15-01-09 21:43)
 ✔ Sorted Linked List to Balanced BST @done (15-01-09 21:42)
 ✔ In-place conversion of Sorted DLL to Balanced BST @done (15-01-09 21:42)
 ✔ Find a pair with given sum in a Balanced BST @done (15-01-09 21:36)
 ✔ *Total number of possible Binary Search Trees with n keys @done (15-01-09 17:13)
 ✔ *Merge Two Balanced Binary Search Trees @done (15-01-09 17:13)
 ✔ *Binary Tree to Binary Search Tree Conversion @done (15-01-09 17:13)
 ✔ *Transform a BST to greater sum tree @done (15-01-09 17:13)
 ✔ *Inorder predecessor and successor for a given key in BST  @done (15-01-09 17:13)